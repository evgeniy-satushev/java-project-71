<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="app"><sessioninfo id="raider-ge78hx-64163cac" start="1707139206888" dump="1707139207791"/><package name="hexlet/code/formatter"><class name="hexlet/code/formatter/StylishFormat" sourcefilename="StylishFormat.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStylishFormatData" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/formatter/OutputFormatData" sourcefilename="OutputFormatData.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateDiff" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDiffData" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDiffData" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$generateDiff$0" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="115"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/formatter/PlainFormat" sourcefilename="PlainFormat.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPlainFormatData" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="41" covered="124"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="124"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OutputFormatData.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="2"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="2"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="2"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="1" cb="1"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="115"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PlainFormat.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="4"/><line nr="14" mi="0" ci="11" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="2"/><line nr="17" mi="0" ci="15" mb="0" cb="0"/><line nr="19" mi="0" ci="14" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="1" cb="3"/><line nr="24" mi="0" ci="19" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="2" cb="2"/><line nr="26" mi="19" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="3" mb="3" cb="1"/><line nr="28" mi="19" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="18" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="124"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StylishFormat.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="57" covered="270"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="6" covered="43"/><counter type="COMPLEXITY" missed="9" covered="16"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="3"/></package><package name="hexlet/code/util"><class name="hexlet/code/util/Utils" sourcefilename="Utils.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNullValue" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexObject" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="15"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isString" desc="(Ljava/lang/Object;)Z" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComplexObject" desc="(Ljava/lang/Object;)Z" line="21"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="27"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Utils.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="0" ci="4" mb="2" cb="2"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="8" ci="0" mb="4" cb="0"/><line nr="15" mi="2" ci="5" mb="1" cb="1"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="2" ci="11" mb="3" cb="3"/><counter type="INSTRUCTION" missed="15" covered="27"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="15" covered="27"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></package><package name="hexlet/code"><class name="hexlet/code/Differ" sourcefilename="Differ.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Parser$1" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getData" desc="(Ljava/nio/file/Path;)Ljava/util/Map;" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Map;" line="18"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/App" sourcefilename="App.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Integer;" line="27"><counter type="INSTRUCTION" missed="15" covered="25"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="28"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Parser$2" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="App.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="9" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="28"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Parser.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="2"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="13" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Differ.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="0" ci="4" mb="0" cb="2"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="31" covered="93"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="5"/></package><counter type="INSTRUCTION" missed="103" covered="390"/><counter type="BRANCH" missed="17" covered="33"/><counter type="LINE" missed="16" covered="64"/><counter type="COMPLEXITY" missed="21" covered="29"/><counter type="METHOD" missed="7" covered="17"/><counter type="CLASS" missed="0" covered="9"/></report>